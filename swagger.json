{
    "openapi": "3.0.3",
    "info": {
        "title": "API REST para consumo de Dev FrontEnd",
        "description": "Para desenvolvedores FrontEnd testarem suas aplicações consumindo uma API com registro de usuários, login com autenticação JWT, criptografia de senha, CRUD de usuários e postagens. ",
        "contact": {
            "email": "9apsilva@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:4000",
            "description": "Teste local"
        },
        {
            "url": "https://api-card-task.herokuapp.com",
            "description": "servidor online"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "summary": "logar na aplicação",
                "description": "rota para realizar o login e gerar o JWT",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "message": "credenciais inválidas"
                    },
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User",
                                    "bearerAuth": {
                                        "$ref": "#/components/securitySchemes/BearerAuth"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "summary": "criar usuario",
                "description": "rota para criar um usuario novo",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "cadastrado"
                    },
                    "406": {
                        "description": "verifique os dados inseridos"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "summary": "mostrar usuario",
                "description": "rota para exibir os dados do usuario logado (não traz senha)",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "name": "id_token",
                        "in": "headers",
                        "description": "id do usuario logado enviado pelo middleware na autenticação ao chamar o método",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "sem usuarios cadastrados"
                    }
                }
            }
        },
        "/user/update": {
            "patch": {
                "summary": "atualizar dados do usuario",
                "description": "rota para atualizar dados, por enquanto nome.",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "name": "id_token",
                        "in": "headers",
                        "description": "id do usuario logado enviado pelo middleware na autenticação ao chamar o método",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nome Novo"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "falha ao atualizar"
                    }
                }
            }
        },
        "/user/delete":{
            "delete":{
                "summary":"deletar usuario",
                "description": "deleta o usuario e todas os links relacionadas a ele",
                "tags":["user"],
                "parameters":[{
                    "name": "id_token",
                    "in":"headers",
                    "description":"id do usuario logado enviado pelo middleware na autenticação ao chamar o método",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "deletado com sucesso"
                    },
                    "304": {
                        "description": "falha ao deletar"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Login": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "required": true,
                        "example": "jhon@Doe.com"
                    },
                    "password": {
                        "type": "string",
                        "required": true,
                        "example": "dd64d98wddggw4"
                    }
                }
            },
            "CreateUser": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "required": true,
                        "example": "Alex Doe"
                    },
                    "email": {
                        "type": "string",
                        "required": true,
                        "example": "Alex@Doe.com"
                    },
                    "password": {
                        "type": "string",
                        "required": true,
                        "example": "dd64d98wddggw4"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "dd554d8dd78d6d"
                    },
                    "name": {
                        "type": "string",
                        "example": "Alex Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "Jhon@Doe.com"
                    },
                    "createdAt": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}